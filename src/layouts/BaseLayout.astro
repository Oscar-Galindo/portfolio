---
export interface Props {
  title?: string;
  description?: string;
  image?: string;
}

const { 
  title = 'Oscar Galindo - Full Stack Developer',
  description = 'Senior Full Stack Developer specializing in modern web technologies, cloud architecture, and scalable solutions.',
  image = '/og-image.jpg'
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!doctype html>
<html lang="en" class="scroll-smooth">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <meta name="generator" content={Astro.generator} />
  
  <title>{title}</title>
  <meta name="description" content={description} />
  <link rel="canonical" href={canonicalURL} />
  
  <!-- Open Graph -->
  <meta property="og:type" content="website" />
  <meta property="og:url" content={canonicalURL} />
  <meta property="og:title" content={title} />
  <meta property="og:description" content={description} />
  <meta property="og:image" content={image} />
  
  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={canonicalURL} />
  <meta property="twitter:title" content={title} />
  <meta property="twitter:description" content={description} />
  <meta property="twitter:image" content={image} />
  
  <!-- Preconnect to external domains -->
  <link rel="preconnect" href="https://res.cloudinary.com" />
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="dns-prefetch" href="https://cdn.contentful.com" />
</head>
<body class="min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 text-gray-900 dark:text-gray-100">
  <nav class="fixed top-0 w-full backdrop-blur-lg bg-white/80 dark:bg-gray-900/80 z-50 border-b border-gray-200 dark:border-gray-700">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex justify-between items-center h-16">
        <a href="/" class="font-bold text-xl gradient-text">OG</a>
        <div class="flex items-center space-x-8">
          <a href="/#projects" class="hover:text-teal-600 transition-colors">Projects</a>
          <a href="/#experience" class="hover:text-teal-600 transition-colors">Experience</a>
          <a href="/#skills" class="hover:text-teal-600 transition-colors">Skills</a>
          <a href="/#contact" class="hover:text-teal-600 transition-colors">Contact</a>
          <button
            id="theme-toggle"
            class="icon-btn"
            aria-label="Toggle theme"
          >
            <div class="i-carbon-sun dark:i-carbon-moon w-5 h-5"></div>
          </button>
        </div>
      </div>
    </div>
  </nav>
  
  <main class="pt-16">
    <slot />
  </main>
  
  <footer class="mt-32 border-t border-gray-200 dark:border-gray-700 py-8">
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 text-center text-gray-600 dark:text-gray-400">
      <p>&copy; {new Date().getFullYear()} Oscar Galindo. Built with Astro, Contentful, and Cloudinary.</p>
    </div>
  </footer>

  <script>
    const theme = (() => {
      if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
        return localStorage.getItem('theme');
      }
      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        return 'dark';
      }
      return 'light';
    })();

    if (theme === 'dark') {
      document.documentElement.classList.add('dark');
    }

    window.localStorage.setItem('theme', theme);

    const handleToggleClick = () => {
      const element = document.documentElement;
      element.classList.toggle('dark');
      
      const isDark = element.classList.contains('dark');
      localStorage.setItem('theme', isDark ? 'dark' : 'light');
    };

    document.getElementById('theme-toggle')?.addEventListener('click', handleToggleClick);
  </script>
</body>
</html>